给定一个包含 n 个整数的数组 nums 和一个目标值 target，判断 nums 中是否存在四个元素 a，b，c 和 d ，
* 使得 a + b + c + d 的值与 target 相等？找出所有满足条件且不重复的四元组。
注意：
答案中不可以包含重复的四元组。
     
思路很重要！！！
将题目化解为三数之和处理，在化解为两数之和处理！
public List<List<Integer>> fourSum_Other(int[] nums, int target){

        List<List<Integer>>lists=new ArrayList<>();
        if(nums.length<4){
            return lists;
        }
        Arrays.sort(nums);

        for(int z = 0; z < nums.length; z ++){
            if (z > 0 && nums[z] == nums[z - 1]) continue;//前面已经找到了当最小数为 nums[z]的所有符合组合，所以就不需要再进行查找了
            
            int newTarget = target - nums[z];          // 将四数之和转化为三数
            for(int k = z+1; k < nums.length; k++){   
                if(k > z+1 && nums[k] == nums[k - 1]) continue;
                int newTarget2 = newTarget - nums[k];     // 三数变成两数
                int i = k + 1, j = nums.length - 1;
                while (i < j) {              // 两数之和直接套用《两数之和2》的题
                    if (nums[i] + nums[j] == newTarget2) {
                        List<Integer> l=Arrays.asList(nums[z], nums[k], nums[i], nums[j]);
                        if(!lists.contains(l))
                            lists.add(l);
                        while (i < j && nums[i] == nums[i + 1]) ++i;   //注意去重
                        while (i < j && nums[j] == nums[j - 1]) --j;
                        ++i; --j;
                    } else if (nums[i] + nums[j] < newTarget2) ++i;

                    else --j;
                }
            }

        }
        return lists;

    }
     
